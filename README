NAME
    Color::ANSI::Util - Routines for dealing with ANSI colors

VERSION
    version 0.10

SYNOPSIS
     use Color::ANSI::Util qw(
         ansifg
         ansibg
     );

     say ansifg("f01010"); # => "\e[31;1m" (on 16-color terminal)
     say ansibg("ff5f87"); # => "\e[48;5;204m" (on 256-color terminal)

    There are a bunch of other exportable functions too, mostly for
    converting between RGB and ANSI color (16/256/24bit color depth).

DESCRIPTION
    This module provides routines for dealing with ANSI colors.

    Keywords: xterm, xterm-256color, terminal

FUNCTIONS
  ansi16_to_rgb($color) => STR
    Convert ANSI-16 color to RGB. $color is number from 0-15, or color names
    "black", "red", "green", "yellow", "blue", "magenta", "cyan", "white"
    with "bold" to indicate bold/bright. Return 6-hexdigit, e.g. "ff00cc".

    Die on invalid input.

  rgb_to_ansi16($color) => INT
    Convert RGB to ANSI-16 color. $color is 6-hexdigit RGB color like
    "ff00cc". Will pick the closest color. Return number from 0-15.

    Die on invalid input.

  ansi256_to_rgb($color) => STR
    Convert ANSI-256 color to RGB. $color is a number from 0-255. Return
    6-hexdigit, e.g. "ff00cc".

    Die on invalid input.

  rgb_to_ansi256($color) => INT
    Convert RGB to ANSI-256 color. $color is 6-hexdigit RGB color like
    "ff00cc". Will pick the closest color. Return number between 0-255.

    Die on invalid input.

  rgb_to_ansi16_fg_code($rgb) => STR
  ansi16fg($rgb) => STR
    Alias for rgb_to_ansi16_fg_code().

  rgb_to_ansi16_bg_code($rgb) => STR
  ansi16bg($rgb) => STR
    Alias for rgb_to_ansi16_bg_code().

  rgb_to_ansi256_fg_code($rgb) => STR
  ansi256fg($rgb) => STR
    Alias for rgb_to_ansi256_fg_code().

  rgb_to_ansi256_bg_code($rgb) => STR
  ansi256bg($rgb) => STR
    Alias for rgb_to_ansi256_bg_code().

  rgb_to_ansi24b_fg_code($rgb) => STR
    Return ANSI escape code to set 24bit foreground color. Supported by
    Konsole and Yakuake.

  ansi24bfg($rgb) => STR
    Alias for rgb_to_ansi24b_fg_code().

  rgb_to_ansi24b_bg_code($rgb) => STR
    Return ANSI escape code to set 24bit background color. Supported by
    Konsole and Yakuake.

  ansi24bbg($rgb) => STR
    Alias for rgb_to_ansi24b_bg_code().

  rgb_to_ansi_fg_code($rgb) => STR
    Return ANSI escape code to set 24bit/256/16 foreground color (which
    color depth used is determined by "COLOR_DEPTH" environment setting or
    from Term::Detect::Software). In other words, this function
    automatically chooses rgb_to_ansi{24b,256,16}_fg_code().

  ansifg($rgb) => STR
    Alias for rgb_to_ansi_fg_code().

  rgb_to_ansi_bg_code($rgb) => STR
    Return ANSI escape code to set 24bit/256/16 background color (which
    color depth used is determined by "COLOR_DEPTH" environment setting or
    from Term::Detect::Software). In other words, this function
    automatically chooses rgb_to_ansi{24b,256,16}_bg_code().

  ansibg($rgb) => STR
    Alias for rgb_to_ansi_bg_code().

    None are exported by default, but they are exportable.

ENVIRONMENT
  COLOR_DEPTH => INT
    Observed by: ansi{fg,bg}.

BUGS/NOTES
    Algorithm for finding closest indexed color from RGB color currently not
    very efficient. Probably can add some threshold square distance, below
    which we can shortcut to the final answer.

TODO
    Routine to convert ANSI escape code, e.g. "\e[31;1m" into RGB value
    (ff0000).

SEE ALSO
    Term::ANSIColor

    http://en.wikipedia.org/wiki/ANSI_escape_code

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/Color-ANSI-Util>.

SOURCE
    Source repository is at
    <https://github.com/sharyanto/perl-Color-ANSI-Util>.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=Color-ANSI-Util>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

AUTHOR
    Steven Haryanto <stevenharyanto@gmail.com>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2013 by Steven Haryanto.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

